var Photon;
(function(h){h.ConnectionProtocol={Ws:0,Wss:1};var a=function(){function a(n,c,k){"undefined"===typeof c&&(c="");"undefined"===typeof k&&(k="");this.url=n;this.subprotocol=c;this.keepAliveTimeoutMs=5E3;this._frame="~m~";this._isClosing=this._isConnected=this._isConnecting=!1;this._peerStatusListeners={};this._eventListeners={};this._responseListeners={};this.keepAliveTimer=0;this._logger=new Exitgames.Common.Logger(k&&""!=k?k+": ":"")}a.prototype.isConnecting=function(){return this._isConnecting};a.prototype.isConnected=
function(){return this._isConnected};a.prototype.isClosing=function(){return this._isClosing};a.prototype.connect=function(){var a=this;this._socket=""==this.subprotocol?new WebSocket(this.url):new WebSocket(this.url,this.subprotocol);this._onConnecting();this._socket.onopen=function(a){};this._socket.onmessage=function(c){c=a._decode(c.data);a._onMessage(c.toString())};this._socket.onclose=function(c){a._logger.debug("onclose: wasClean =",c.wasClean,", code=",c.code,", reason =",c.reason);a._isConnecting?
a._onConnectFailed(c):(1006==c.code&&a._onTimeout(),a._onDisconnect())};this._socket.onerror=function(c){a._onError(c)}};a.prototype.disconnect=function(){this._isClosing=!0;this._socket.close()};a.prototype.sendOperation=function(a,c,k,g){a={req:a,vals:[]};if(Exitgames.Common.Util.isArray(c))a.vals=c;else if(void 0===c)a.vals=[];else throw Error(this._logger.format("PhotonPeer[sendOperation] - Trying to send non array data:",c));this._send(a);this._logger.debug("PhotonPeer[sendOperation] - Sending request:",
a)};a.prototype.addPeerStatusListener=function(a,c){this._addListener(this._peerStatusListeners,a,c)};a.prototype.addEventListener=function(a,c){this._addListener(this._eventListeners,a.toString(),c)};a.prototype.addResponseListener=function(a,c){this._addListener(this._responseListeners,a.toString(),c)};a.prototype.removePeerStatusListener=function(a,c){this._removeListener(this._peerStatusListeners,a,c)};a.prototype.removeEventListener=function(a,c){this._removeListener(this._eventListeners,a.toString(),
c)};a.prototype.removeResponseListener=function(a,c){this._removeListener(this._responseListeners,a.toString(),c)};a.prototype.removePeerStatusListenersForCode=function(a){this._removeListenersForCode(this._peerStatusListeners,a)};a.prototype.removeEventListenersForCode=function(a){this._removeListenersForCode(this._eventListeners,a.toString())};a.prototype.removeResponseListenersForCode=function(a){this._removeListenersForCode(this._responseListeners,a.toString())};a.prototype.setLogLevel=function(a){this._logger.setLevel(a)};
a.prototype.onUnhandledEvent=function(a,c){this._logger.warn("PhotonPeer: No handler for event",a,"registered.")};a.prototype.onUnhandledResponse=function(a,c){this._logger.warn("PhotonPeer: No handler for response",a,"registered.")};a.prototype._dispatchEvent=function(a,c){if(!this._dispatch(this._eventListeners,a.toString(),c,"event"))this.onUnhandledEvent(a,c)};a.prototype._dispatchResponse=function(a,c){if(!this._dispatch(this._responseListeners,a.toString(),c,"response"))this.onUnhandledResponse(a,
c)};a.prototype._stringify=function(a){if("[object Object]"==Object.prototype.toString.call(a)){if(!JSON)throw Error("PhotonPeer[_stringify] - Trying to encode as JSON, but JSON.stringify is missing.");return"~j~"+JSON.stringify(a)}return String(a)};a.prototype._encode=function(a){var c="",k;a=Exitgames.Common.Util.isArray(a)?a:[a];for(var g=0,l=a.length;g<l;g++)k=null===a[g]||void 0===a[g]?"":this._stringify(a[g]),c+=this._frame+k.length+this._frame+k;return c};a.prototype._decode=function(a){var c=
[],k,g;k=a;-1!==a.indexOf("\x00")&&(k=a.replace(/[\0]/g,""));a=k;do{if(a.substr(0,3)!==this._frame)break;a=a.substr(3);k="";for(var l=0,h=a.length;l<h;l++)if(g=Number(a.substr(l,1)),a.substr(l,1)==g)k+=g;else{a=a.substr(k.length+this._frame.length);k=Number(k);break}c.push(a.substr(0,k));a=a.substr(k)}while(""!==a);return c};a.prototype._onMessage=function(a){"~j~"==a.substr(0,3)?this._onMessageReceived(JSON.parse(a.substr(3))):this._sessionid?this._onMessageReceived(a):(this._sessionid=a,this._onConnect())};
a.prototype.resetKeepAlive=function(){var a=this;clearTimeout(this.keepAliveTimer);1E3<=this.keepAliveTimeoutMs&&(this.keepAliveTimer=setTimeout(function(){return a._send({irq:1,vals:[1,Date.now()]},!0)},this.keepAliveTimeoutMs))};a.prototype._send=function(a,c){"undefined"===typeof c&&(c=!1);var k=this._encode(a);if(this._isConnected&&!this._isClosing)this.resetKeepAlive(),this._socket.send(k);else if(!c)throw Error(this._logger.format("PhotonPeer[_send] - Operation",a.req,'- failed, "isConnected" is',
this._isConnected,', "isClosing" is',this._isClosing,"!"));};a.prototype._onMessageReceived=function(a){if("object"===typeof a)if(this._logger.debug("PhotonPeer[_onMessageReceived] - Socket received message:",a),a.vals=void 0!==a.vals?a.vals:[],0<a.vals.length&&(a.vals=this._parseMessageValuesArrayToJSON(a.vals)),void 0!==a.res){var c=parseInt(a.res);this._parseResponse(c,a)}else if(void 0!==a.evt)c=parseInt(a.evt),this._parseEvent(c,a);else if(void 0!==a.irs)c=parseInt(a.irs),this._parseInternalResponse(c,
a);else throw Error(this._logger.format("PhotonPeer[_onMessageReceived] - Received undefined message type:",a));};a.prototype._parseMessageValuesArrayToJSON=function(a){var c={};if(Exitgames.Common.Util.isArray(a))if(0==a.length%2)for(var k,g;0<a.length;)k=a.shift()+"",g=a.shift(),c[k]=g;else throw Error(this._logger.format("PhotonPeer[_parseMessageValuesToJSON] - Received invalid values array:",a));return c};a.prototype._parseEvent=function(a,c){switch(a){default:this._dispatchEvent(a,{vals:c.vals})}};
a.prototype._parseResponse=function(a,c){switch(a){default:this._dispatchResponse(a,{errCode:c.err,errMsg:c.msg,vals:c.vals})}};a.prototype._parseInternalResponse=function(a,c){this._logger.debug("internal response:",c)};a.prototype._onConnecting=function(){this._logger.debug("PhotonPeer[_onConnecting] - Starts connecting",this.url,'..., raising "connecting" event ...');this._isConnecting=!0;this._dispatchPeerStatus(a.StatusCodes.connecting)};a.prototype._onConnect=function(){this._logger.debug('PhotonPeer[_onConnect] - Connected successfully! Raising "connect" event ...');
this._isConnecting=!1;this._isConnected=!0;this._dispatchPeerStatus(a.StatusCodes.connect)};a.prototype._onConnectFailed=function(n){this._logger.error("PhotonPeer[_onConnectFailed] - Socket connection could not be created:",this.url,this.subprotocol,'Wrong host or port?\n Raising "connectFailed event ...');this._isConnecting=this._isConnected=!1;this._dispatchPeerStatus(a.StatusCodes.connectFailed)};a.prototype._onDisconnect=function(){var n=this._isConnected,c=this._isClosing;this._logger.debug('PhotonPeer[_onDisconnect] - Socket closed, raising "disconnect" event ...');
this._isClosing=this._isConnected=this._isConnecting=!1;n&&(c?this._dispatchPeerStatus(a.StatusCodes.disconnect):this._dispatchPeerStatus(a.StatusCodes.connectClosed))};a.prototype._onTimeout=function(){this._logger.debug('PhotonPeer[_onTimeout] - Client timed out! Raising "timeout" event ...');this._dispatchPeerStatus(a.StatusCodes.timeout)};a.prototype._onError=function(n){this._logger.error("PhotonPeer[_onError] - Connection error:",n);this._isConnecting=this._isConnected=this._isClosing=!1;this._dispatchPeerStatus(a.StatusCodes.error)};
a.prototype._addListener=function(a,c,k){c in a||(a[c]=[]);k&&"function"===typeof k?(this._logger.debug("PhotonPeer[_addListener] - Adding listener for event",c),a[c].push(k)):this._logger.error("PhotonPeer[_addListener] - Listener",c,"is not a function but of type",typeof k,". No listener added!");return this};a.prototype._dispatch=function(a,c,k,g){if(c in a){a=a[c];c=0;for(g=a.length;c<g;c++)Exitgames.Common.Util.isArray(k)||(k=[k]),a[c].apply(this,void 0===k?[]:k);return!0}return!1};a.prototype._dispatchPeerStatus=
function(a){this._dispatch(this._peerStatusListeners,a,void 0,"peerStatus")||this._logger.warn("PhotonPeer[_dispatchPeerStatus] - No handler for ",a,"registered.")};a.prototype._removeListener=function(a,c,k){if(c in a){var g=a[c].length;a[c]=a[c].filter(function(a){return a!=k});this._logger.debug("PhotonPeer[_removeListener] - Removing listener for event",c,"removed:",g-a[c].length)}return this};a.prototype._removeListenersForCode=function(a,c){this._logger.debug("PhotonPeer[_removeListenersForCode] - Removing all listeners for event",
c);c in a&&(a[c]=[]);return this};a.StatusCodes={connecting:"connecting",connect:"connect",connectFailed:"connectFailed",disconnect:"disconnect",connectClosed:"connectClosed",error:"error",timeout:"timeout"};return a}();h.PhotonPeer=a})(Photon||(Photon={}));var Exitgames;
(function(h){(function(a){var h=function(){function a(c,k){"undefined"===typeof c&&(c="");"undefined"===typeof k&&(k=a.Level.INFO);this.prefix=c;this.level=k}a.prototype.setLevel=function(c){c=Math.max(c,a.Level.DEBUG);this.level=c=Math.min(c,a.Level.OFF)};a.prototype.isLevelEnabled=function(a){return a>=this.level};a.prototype.getLevel=function(){return this.level};a.prototype.debug=function(c){for(var k=[],g=0;g<arguments.length-1;g++)k[g]=arguments[g+1];this.log(a.Level.DEBUG,c,k)};a.prototype.info=
function(c){for(var k=[],g=0;g<arguments.length-1;g++)k[g]=arguments[g+1];this.log(a.Level.INFO,c,k)};a.prototype.warn=function(c){for(var k=[],g=0;g<arguments.length-1;g++)k[g]=arguments[g+1];this.log(a.Level.WARN,c,k)};a.prototype.error=function(c){for(var k=[],g=0;g<arguments.length-1;g++)k[g]=arguments[g+1];this.log(a.Level.ERROR,c,k)};a.prototype.format=function(a){for(var k=[],g=0;g<arguments.length-1;g++)k[g]=arguments[g+1];return this.format0(a,k)};a.prototype.formatArr=function(a,k){return this.format0(a,
k)};a.prototype.log=function(c,k,g){if(c>=this.level&&"undefined"!==typeof console&&void 0!==k)try{var l=console[a.log_types[c]];l||(l=console.log);l&&(l.call?l.call(console,this.format0(k,g)):l(console,this.format0(k,g)))}catch(h){}};a.prototype.format0=function(a,k){return this.prefix+a+" "+k.map(function(a){if(void 0!==a)switch(typeof a){case "object":try{return JSON.stringify(a)}catch(k){return a.toString()+"("+k+")"}default:return a.toString()}}).join(" ")};a.Level={DEBUG:1,INFO:2,WARN:3,ERROR:4,
OFF:6};a.log_types=["debug","debug","info","warn","error"];return a}();a.Logger=h;h=function(){function a(){}a.indexOf=function(a,k,g){var l=a.length;for(g=0>g?Math.max(0,l+g):g||0;g<l;g++)if(a[g]===k)return g;return-1};a.isArray=function(a){return"[object Array]"===Object.prototype.toString.call(a)};a.merge=function(a,k){for(var g in k)k.hasOwnProperty(g)&&(a[g]=k[g])};a.getPropertyOrElse=function(a,k,g){return a.hasOwnProperty(k)?a[k]:g};a.enumValueToName=function(a,k){for(var g in a)if(k==a[g])return g;
return"undefined"};a.getEnumKeyByValue=function(a,k){for(var g in a)if(k==a[g])return g};return a}();a.Util=h})(h.Common||(h.Common={}))})(Exitgames||(Exitgames={}));
(function(h){h=h.Lite||(h.Lite={});h=h.Constants||(h.Constants={});h.LiteOpKey={ActorList:252,ActorNr:254,ActorProperties:249,Add:238,Broadcast:250,Cache:247,Code:244,Data:245,GameId:255,GameProperties:248,Group:240,Properties:251,ReceiverGroup:246,Remove:239,TargetActorNr:253,EmptyRoomLiveTime:236};h.LiteEventCode={Join:255,Leave:254,PropertiesChanged:253};h.LiteOpCode={ChangeGroups:248,GetProperties:251,Join:255,Leave:254,RaiseEvent:253,SetProperties:252}})(Photon||(Photon={}));
var __extends=this.__extends||function(h,a){function m(){this.constructor=h}for(var n in a)a.hasOwnProperty(n)&&(h[n]=a[n]);m.prototype=a.prototype;h.prototype=new m};
(function(h){(function(a){var m=function(m){function c(a,g){"undefined"===typeof g&&(g="");m.call(this,a,g);this.isJoined=!1;this.roomName="";this.room={properties:{}};this.actors={};this._myActor={photonId:0,properties:{}}}__extends(c,m);c.prototype.myActor=function(){return this._myActor};c.prototype.join=function(k,g,c,h){if(void 0!==k&&this.isConnected()&&!this.isJoined){this._logger.info("PhotonPeer.Lite[join] - Joining roomName:",k);this._logger.debug("PhotonPeer.Lite[join] - actorProperties:",
c,", roomProperties:",g,", broadcast:",h);var p=[];p.push(a.Constants.LiteOpKey.GameId);p.push(k+"");"object"===typeof g&&(p.push(a.Constants.LiteOpKey.GameProperties),p.push(g));"object"===typeof c&&(p.push(a.Constants.LiteOpKey.ActorProperties),p.push(c));p.push(a.Constants.LiteOpKey.Broadcast);p.push(h||!1);this.sendOperation(a.Constants.LiteOpCode.Join,p)}else{if(void 0===k)throw Error("PhotonPeer.Lite[join] - Trying to join with undefined roomName!");if(this.isJoined)throw Error("PhotonPeer.Lite[join] - you have already joined!");
throw Error("PhotonPeer.Lite[join] - Not connected!");}};c.prototype.leave=function(){if(this.isJoined)this._logger.debug("PhotonPeer.Lite[leave] - Leaving ..."),this.sendOperation(a.Constants.LiteOpCode.Leave);else throw Error("PhotonPeer.Lite[leave] - Not joined!");};c.prototype.raiseEvent=function(k,g){if(this.isJoined)if(void 0!==g)this._logger.debug("PhotonPeer.Lite[raiseEvent] - Event",k,":",g),this.sendOperation(a.Constants.LiteOpCode.RaiseEvent,[a.Constants.LiteOpKey.Code,k,a.Constants.LiteOpKey.Data,
g]);else throw Error(this._logger.format("PhotonPeer.Lite[raiseEvent] - Event",k,"- data not passed in as object!"));else throw Error("PhotonPeer.Lite[raiseEvent] - Not joined!");};c.prototype.setActorProperties=function(k,g,c){if(this.isJoined)this._logger.debug("PhotonPeer.Lite[setActorProperties] - actorNumber:"+k+", broadcast:"+c+", data:",g),this.sendOperation(a.Constants.LiteOpCode.SetProperties,[a.Constants.LiteOpKey.Broadcast,c,a.Constants.LiteOpKey.Properties,g,a.Constants.LiteOpKey.ActorNr,
k]);else throw Error("PhotonPeer.Lite[setActorProperties] - Not joined!");};c.prototype.getActorProperties=function(k,g){if(this.isJoined){var c=[];c.push(a.Constants.LiteOpKey.ActorProperties);void 0!==k&&Exitgames.Common.Util.isArray(k)&&0<k.length&&c.push(k);2!==c.length&&c.push(null);c.push(a.Constants.LiteOpKey.ActorList);void 0!==g&&Exitgames.Common.Util.isArray(g)&&0<g.length&&c.push(g);4!==c.length&&c.push(null);c.push(a.Constants.LiteOpKey.Properties);c.push(2);this._logger.debug("PhotonPeer.Lite[getActorProperties] -",
c);this.sendOperation(a.Constants.LiteOpCode.GetProperties,c)}else throw Error("PhotonPeer.Lite[getProperties] - Not joined!");};c.prototype.setRoomProperties=function(k,g){if(this.isJoined)this._logger.debug("PhotonPeer.Lite[setRoomProperties] - broadcast:"+g+", data:",k),this.sendOperation(a.Constants.LiteOpCode.SetProperties,[a.Constants.LiteOpKey.Broadcast,g,a.Constants.LiteOpKey.Properties,k]);else throw Error("PhotonPeer.Lite[setRoomProperties] - Not joined!");};c.prototype.getRoomProperties=
function(k){if(this.isJoined){var g=[];g.push(a.Constants.LiteOpKey.GameProperties);void 0!==k?Exitgames.Common.Util.isArray(k)&&0<k.length&&g.push(k):g.push(null);this._logger.debug("PhotonPeer.Lite[getRoomProperties] -",g);this.sendOperation(a.Constants.LiteOpCode.GetProperties,g)}else throw Error("PhotonPeer.Lite[getRoomProperties] - Not joined!");};c.prototype._addActor=function(a){this.actors[a]={photonId:a};this._logger.debug("PhotonPeer.Lite[_addActor] - Added actorNr",a,"actors known are now ",
this.actors);return this.actors[a]};c.prototype._removeActor=function(a){delete this.actors[a];this._logger.debug("PhotonPeer.Lite[_removeActor] - Removed actorNr",a,", actors known are now",this.actors);return this};c.prototype.actorNrFromVals=function(a){a=a[h.Lite.Constants.LiteOpKey.ActorNr];return void 0!==a?parseInt(a):-1};c.prototype._parseEvent=function(c,g){var l=this.actorNrFromVals(g.vals);switch(c){case a.Constants.LiteEventCode.Join:this._onEventJoin(g,l);break;case a.Constants.LiteEventCode.Leave:this._onEventLeave(l);
break;case a.Constants.LiteEventCode.PropertiesChanged:this._onEventSetProperties(g,l);break;default:this._logger.info("PhotonPeer.Lite[_parseEvent] - Unknown event code",c,"with JSON:",g),this._dispatchEvent(c,{vals:g.vals,actorNr:l})}};c.prototype._onEventJoin=function(c,g){if(g!==this._myActor.photonId)this._logger.debug("PhotonPeer.Lite[_onEventJoin] - ActorNr",g,"joined."),this._addActor(g),this._dispatchEvent(a.Constants.LiteEventCode.Join,{newActors:[g]});else{var l=c.vals[a.Constants.LiteOpKey.ActorList],
h=[],p;for(p in l)g=parseInt(l[p]),g!==this._myActor.photonId&&void 0===this.actors[g]&&(this._logger.debug("PhotonPeer.Lite[_onEventJoin] - ActorNr",g,"registered as already joined"),this._addActor(g),h.push(g));this._dispatchEvent(a.Constants.LiteEventCode.Join,{newActors:h})}};c.prototype._onEventLeave=function(c){this._logger.debug("PhotonPeer.Lite[_onEventLeave] - ActorNr",c,"left");this._removeActor(c);this._dispatchEvent(a.Constants.LiteEventCode.Leave,{actorNr:c})};c.prototype._onEventSetProperties=
function(a,c){};c.prototype._parseResponse=function(c,g){var l=this.actorNrFromVals(g.vals);switch(c){case a.Constants.LiteOpCode.Join:this._onResponseJoin(l);break;case a.Constants.LiteOpCode.Leave:this._onResponseLeave(l);break;case a.Constants.LiteOpCode.RaiseEvent:break;case a.Constants.LiteOpCode.GetProperties:this._onResponseGetProperties(g);break;case a.Constants.LiteOpCode.SetProperties:this._onResponseSetProperties(g,l);break;default:this._logger.debug("PhotonPeer.Lite[_parseResponse] - Unknown response code",
c,g,"actorNr",l),this._dispatchResponse(c,{errCode:g.err,errMsg:g.msg,vals:g.vals,actorNr:l})}};c.prototype._onResponseGetProperties=function(c){this._logger.debug("PhotonPeer.Lite[_onResponseGetProperties] - getProperties response:",c);if(void 0!==c.vals[a.Constants.LiteOpKey.ActorProperties]){var g=c.vals[a.Constants.LiteOpKey.ActorProperties],l;for(l in g)this.actors[l].properties=g[l]}void 0!==c.vals[a.Constants.LiteOpKey.GameProperties]&&(this.room.properties=c.vals[a.Constants.LiteOpKey.GameProperties]);
this._dispatchResponse(a.Constants.LiteOpCode.GetProperties,{vals:c.vals})};c.prototype._onResponseJoin=function(c){this.isJoined=!0;"object"===typeof this._myActor&&(this._myActor=this._addActor(c),this._logger.debug("PhotonPeer.Lite[_onResponseJoin] - You joined as actor number / myActor.photonId has been set to:",this._myActor.photonId));this._dispatchResponse(a.Constants.LiteOpCode.Join,{actorNr:c})};c.prototype._onResponseLeave=function(c){this.isJoined=!1;this._removeActor(this._myActor.photonId);
this._logger.debug("PhotonPeer.Lite[_onResponseLeave] - You left the room",this.roomName);this.roomName="";this.room={properties:{}};this._dispatchResponse(a.Constants.LiteOpCode.Leave,{actorNr:c})};c.prototype._onResponseSetProperties=function(c,g){this._logger.debug("PhotonPeer.Lite[_onResponseSetProperties] - setProperties response:",c,"actorNr",g);this._dispatchResponse(a.Constants.LiteOpCode.SetProperties,{vals:c.vals,actorNr:g})};return c}(h.PhotonPeer);a.LitePeer=m})(h.Lite||(h.Lite={}))})(Photon||
(Photon={}));
(function(h){var a=h.LoadBalancing||(h.LoadBalancing={}),a=a.Constants||(a.Constants={}),m=h.Lite.Constants.LiteOpKey,n=h.Lite.Constants.LiteOpCode;h=h.Lite.Constants.LiteEventCode;a.ErrorCode={Ok:0,OperationNotAllowedInCurrentState:-3,InvalidOperationCode:-2,InternalServerError:-1,InvalidAuthentication:32767,GameIdAlreadyExists:32766,GameFull:32765,GameClosed:32764,NoRandomMatchFound:32760,GameDoesNotExist:32758,MaxCcuReached:32757,InvalidRegion:32756};a.ActorProperties={PlayerName:255};a.GameProperties=
{MaxPlayers:255,IsVisible:254,IsOpen:253,PlayerCount:252,Removed:251,PropsListedInLobby:250,CleanupCacheOnLeave:249};a.EventCode={GameList:230,GameListUpdate:229,QueueState:228,AppStats:226,AzureNodeInfo:210,Join:h.Join,Leave:h.Leave,PropertiesChanged:h.PropertiesChanged,Disconnect:252,LobbyStats:224};a.ParameterCode={Address:230,PeerCount:229,GameCount:228,MasterPeerCount:227,UserId:225,ApplicationId:224,Position:223,MatchMakingType:223,GameList:222,Secret:221,AppVersion:220,AzureNodeInfo:210,AzureLocalNodeId:209,
AzureMasterNodeId:208,RoomName:m.GameId,Broadcast:m.Broadcast,ActorList:m.ActorList,ActorNr:m.ActorNr,PlayerProperties:m.ActorProperties,CustomEventContent:m.Data,Data:m.Data,Code:m.Code,GameProperties:m.GameProperties,Properties:m.Properties,TargetActorNr:m.TargetActorNr,ReceiverGroup:m.ReceiverGroup,Cache:m.Cache,CleanupCacheOnLeave:241,Group:m.Group,Remove:m.Remove,Add:m.Add,EmptyRoomTTL:m.EmptyRoomLiveTime,PlayerTTL:235,ClientAuthenticationType:217,ClientAuthenticationParams:216,ClientAuthenticationData:214,
JoinMode:215,FindFriendsRequestList:1,FindFriendsResponseOnlineList:1,FindFriendsResponseRoomIdList:2,LobbyName:213,LobbyType:212,LobbyStats:211,Region:210,IsInactive:233,CheckUserOnJoin:232,UriPath:209,RpcCallParams:208,RpcCallRetCode:207,RpcCallRetMessage:206,RpcCallRetData:208,Forward:234};a.OperationCode={Authenticate:230,JoinLobby:229,LeaveLobby:228,CreateGame:227,JoinGame:226,JoinRandomGame:225,Leave:n.Leave,RaiseEvent:n.RaiseEvent,SetProperties:n.SetProperties,GetProperties:n.GetProperties,
ChangeGroups:n.ChangeGroups,FindFriends:222,LobbyStats:221,GetRegions:220,Rpc:219};a.MatchmakingMode={FillRoom:0,SerialMatching:1,RandomMatching:2};a.EventCaching={DoNotCache:0,MergeCache:1,ReplaceCache:2,RemoveCache:3,AddToRoomCache:4,AddToRoomCacheGlobal:5,RemoveFromRoomCache:6,RemoveFromRoomCacheForActorsLeft:7};a.ReceiverGroup={Others:0,All:1,MasterClient:2};a.CustomAuthenticationType={Custom:0,Steam:1,Facebook:2,None:255};a.LobbyType={Default:1,SqlLobby:2}})(Photon||(Photon={}));
(function(h){(function(a){function m(a,f){for(var b in n)if(0==a.indexOf(n[b]))return a;switch(f){case h.ConnectionProtocol.Ws:return n.ws+a;case h.ConnectionProtocol.Wss:return n.wss+a;default:return n.ws+a}}var n={ws:"ws://",wss:"wss://"},c=function(){function e(a,b,d){this.name=a;this.actorNr=b;this.isLocal=d;this.customProperties={};this.suspended=!1}e.prototype.getRoom=function(){return this.loadBalancingClient.myRoom()};e.prototype.raiseEvent=function(a,b,d){this.loadBalancingClient&&this.loadBalancingClient.raiseEvent(a,
b,d)};e.prototype.setName=function(a){this.name=a};e.prototype.onPropertiesChange=function(a,b){};e.prototype.getCustomProperty=function(a){return this.customProperties[a]};e.prototype.getCustomPropertyOrElse=function(a,b){return Exitgames.Common.Util.getPropertyOrElse(this.customProperties,a,b)};e.prototype.setCustomProperty=function(a,b){this.customProperties[a]=b;var d={};d[a]=b;this.loadBalancingClient&&this.loadBalancingClient.isJoinedToRoom()&&this.loadBalancingClient._setPropertiesOfActor(this.actorNr,
d);this.onPropertiesChange(d,!0)};e.prototype.setCustomProperties=function(a){var b={},d;for(d in a)this.customProperties[d]=a[d],b[d]=a[d];this.loadBalancingClient&&this.loadBalancingClient.isJoinedToRoom()&&this.loadBalancingClient._setPropertiesOfActor(this.actorNr,b);this.onPropertiesChange(b,!0)};e.prototype.getJoinToken=function(){return this.joinToken};e.prototype.isSuspended=function(){return this.suspended};e.prototype._getAllProperties=function(){var f={};f[a.Constants.ActorProperties.PlayerName]=
this.name;for(var b in this.customProperties)f[b]=this.customProperties[b];return f};e.prototype._setLBC=function(a){this.loadBalancingClient=a};e.prototype._updateFromResponse=function(f){this.actorNr=f[a.Constants.ParameterCode.ActorNr];f=f[a.Constants.ParameterCode.PlayerProperties];if(void 0!==f){var b=f[a.Constants.ActorProperties.PlayerName];void 0!==b&&(this.name=b);this._updateCustomProperties(f)}};e.prototype._updateMyActorFromResponse=function(f){this.joinToken=(this.actorNr=f[a.Constants.ParameterCode.ActorNr])?
this.actorNr.toString():null};e.prototype._updateCustomProperties=function(a){for(var b in a)this.customProperties[b]=a[b];this.onPropertiesChange(a,!1)};e.prototype._setSuspended=function(a){this.suspended=a};e._getActorNrFromResponse=function(f){return f[a.Constants.ParameterCode.ActorNr]};return e}();a.Actor=c;var k=function(){function e(a){this.address=this.name="";this.maxPlayers=0;this.isOpen=this.isVisible=!0;this.suspendedPlayerLiveTime=this.emptyRoomLiveTime=this.playerCount=0;this.cleanupCacheOnLeave=
this.removed=this.uniqueUserId=!1;this._customProperties={};this._propsListedInLobby=[];this.name=a}e.prototype.onPropertiesChange=function(a,b){};e.prototype.getCustomProperty=function(a){return this._customProperties[a]};e.prototype.getCustomPropertyOrElse=function(a,b){return Exitgames.Common.Util.getPropertyOrElse(this._customProperties,a,b)};e.prototype._updateFromMasterResponse=function(f){this.address=f[a.Constants.ParameterCode.Address];if(f=f[a.Constants.ParameterCode.RoomName])this.name=
f};e.prototype._updateFromProps=function(f,b){"undefined"===typeof b&&(b=null);if(f){this.maxPlayers=this.updateIfExists(this.maxPlayers,a.Constants.GameProperties.MaxPlayers,f);this.isVisible=this.updateIfExists(this.isVisible,a.Constants.GameProperties.IsVisible,f);this.isOpen=this.updateIfExists(this.isOpen,a.Constants.GameProperties.IsOpen,f);this.playerCount=this.updateIfExists(this.playerCount,a.Constants.GameProperties.PlayerCount,f);this.removed=this.updateIfExists(this.removed,a.Constants.GameProperties.Removed,
f);this._propsListedInLobby=this.updateIfExists(this._propsListedInLobby,a.Constants.GameProperties.PropsListedInLobby,f);this.cleanupCacheOnLeave=this.updateIfExists(this.cleanupCacheOnLeave,a.Constants.GameProperties.CleanupCacheOnLeave,f);var d={};null===b&&(b=f);for(var e in b)parseInt(e).toString()!=e&&this._customProperties[e]!==b[e]&&(this._customProperties[e]=b[e],d[e]=b[e]);this.onPropertiesChange(d,!1)}};e.prototype.updateIfExists=function(a,b,d){return d.hasOwnProperty(b)?d[b]:a};return e}();
a.RoomInfo=k;var g=function(e){function f(a){e.call(this,a)}__extends(f,e);f.prototype.setCustomProperty=function(a,f,e){"undefined"===typeof e&&(e=!1);this._customProperties[a]=f;var c={};c[a]=f;this.loadBalancingClient&&this.loadBalancingClient.isJoinedToRoom()&&this.loadBalancingClient._setPropertiesOfRoom(c,e);this.onPropertiesChange(c,!0)};f.prototype.setCustomProperties=function(a,f){"undefined"===typeof f&&(f=!1);var e={},c;for(c in a)this._customProperties[c]=a[c],e[c]=a[c];this.loadBalancingClient&&
this.loadBalancingClient.isJoinedToRoom()&&this.loadBalancingClient._setPropertiesOfRoom(e,f);this.onPropertiesChange(e,!0)};f.prototype.setProp=function(a,f){if(this.loadBalancingClient&&this.loadBalancingClient.isJoinedToRoom()){var e={};e[a]=f;this.loadBalancingClient._setPropertiesOfRoom(e)}};f.prototype.setIsVisible=function(f){this.isVisible!=f&&(this.isVisible=f,this.setProp(a.Constants.GameProperties.IsVisible,f))};f.prototype.setIsOpen=function(f){this.isOpen==!f&&(this.isOpen=f,this.setProp(a.Constants.GameProperties.IsOpen,
f))};f.prototype.setMaxPlayers=function(f){this.maxPlayers!=f&&(this.maxPlayers=f,this.setProp(a.Constants.GameProperties.MaxPlayers,f))};f.prototype.setEmptyRoomLiveTime=function(a){this.emptyRoomLiveTime=a};f.prototype.setSuspendedPlayerLiveTime=function(a){this.suspendedPlayerLiveTime=a};f.prototype.setUniqueUserId=function(a){this.uniqueUserId=a};f.prototype.setPropsListedInLobby=function(a){this._propsListedInLobby=a};f.prototype._setLBC=function(a){this.loadBalancingClient=a};return f}(k);a.Room=
g;var l=function(){function e(f,b,d){this.appId=b;this.appVersion=d;this.autoJoinLobby=!0;this.connectOptions={};this.createRoomOptions={};this.joinRoomOptions={};this.roomInfos=[];this.roomInfosDict={};this.actors={};this.actorsArray=[];this.userAuthType=a.Constants.CustomAuthenticationType.None;this.userAuthData=this.userAuthParameters="";this.lobbyStatsRequestList=[];this.state=e.State.Uninitialized;this.logger=new Exitgames.Common.Logger("LoadBalancingClient");this.validNextState={};if("number"==
typeof f)switch(this.connectionProtocol=f,f){case h.ConnectionProtocol.Ws:this.masterServerAddress="ws://app-eu.exitgamescloud.com:9090";this.nameServerAddress="ws://ns.exitgames.com:9093";break;case h.ConnectionProtocol.Wss:this.masterServerAddress="wss://app-eu.exitgamescloud.com:19090";this.nameServerAddress="wss://ns.exitgames.com:19093";break;default:this.nameServerAddress=this.masterServerAddress="wrong_protocol_error",this.logger.error("Wrong protocol: ",f)}else"string"==typeof f?(this.connectionProtocol=
h.ConnectionProtocol.Ws,this.nameServerAddress=this.masterServerAddress=f):(this.connectionProtocol=h.ConnectionProtocol.Ws,this.nameServerAddress=this.masterServerAddress="wrong_protocol_type_error",this.logger.error("Wrong protocol type: ",typeof f));this.initValidNextState();this.currentRoom=this.roomFactoryInternal("");this._myActor=this.actorFactoryInternal("",-1,!0);this.addActor(this._myActor)}e.prototype.onStateChange=function(a){};e.prototype.onError=function(a,b){this.logger.error("Load Balancing Client Error",
a,b)};e.prototype.onOperationResponse=function(a,b,d,e){};e.prototype.onEvent=function(a,b,d){};e.prototype.onRoomList=function(a){};e.prototype.onRoomListUpdate=function(a,b,d,e){};e.prototype.onMyRoomPropertiesChange=function(){};e.prototype.onActorPropertiesChange=function(a){};e.prototype.onJoinRoom=function(a){};e.prototype.onActorJoin=function(a){};e.prototype.onActorLeave=function(a,b){};e.prototype.onActorSuspend=function(a){};e.prototype.onFindFriendsResult=function(a,b,d){};e.prototype.onLobbyStats=
function(a,b,d){};e.prototype.onAppStats=function(a,b,d){};e.prototype.onGetRegionsResult=function(a,b,d){};e.prototype.onWebRpcResult=function(a,b,d,e,c){};e.prototype.roomFactory=function(a){return new g(a)};e.prototype.actorFactory=function(a,b,d){return new c(a,b,d)};e.prototype.myActor=function(){return this._myActor};e.prototype.myRoom=function(){return this.currentRoom};e.prototype.myRoomActors=function(){return this.actors};e.prototype.myRoomActorCount=function(){return this.actorsArray.length};
e.prototype.myRoomActorsArray=function(){return this.actorsArray};e.prototype.roomFactoryInternal=function(a){"undefined"===typeof a&&(a="");a=this.roomFactory(a);a._setLBC(this);return a};e.prototype.actorFactoryInternal=function(a,b,d){"undefined"===typeof a&&(a="");"undefined"===typeof b&&(b=-1);"undefined"===typeof d&&(d=!1);a=this.actorFactory(a,b,d);a._setLBC(this);return a};e.prototype.setNameServerAddress=function(a){this.nameServerAddress=a};e.prototype.getNameServerAddress=function(){return this.nameServerAddress};
e.prototype.setMasterServerAddress=function(a){this.masterServerAddress=a};e.prototype.getMasterServerAddress=function(){return this.nameServerAddress};e.prototype.setUserId=function(a){this.userId=a};e.prototype.getUserId=function(){return this.userId};e.prototype.setCustomAuthentication=function(a,b,d){"undefined"===typeof b&&(b=h.LoadBalancing.Constants.CustomAuthenticationType.Custom);this.userAuthType=b;this.userAuthParameters=a;this.userAuthData=d};e.prototype.connect=function(a){"boolean"===
typeof a&&(a=a?{keepMasterConnection:!0}:{keepMasterConnection:!1});a||(a={});if(this.checkNextState(e.State.ConnectingToMasterserver,!0)){this.changeState(e.State.ConnectingToMasterserver);this.logger.info("Connecting to Master",this.masterServerAddress);this.connectOptions={};for(var b in a)this.connectOptions[b]=a[b];this.masterPeer=new p(this,m(this.masterServerAddress,this.connectionProtocol),"");this.initMasterPeer(this.masterPeer);this.masterPeer.connect();return!0}return!1};e.prototype.connectToNameServer=
function(a){a||(a={});if(this.checkNextState(e.State.ConnectingToNameServer,!0)){this.changeState(e.State.ConnectingToNameServer);this.logger.info("Connecting to NameServer",this.nameServerAddress);this.connectOptions={};for(var b in a)this.connectOptions[b]=a[b];this.nameServerPeer=new r(this,m(this.nameServerAddress,this.connectionProtocol),"");this.initNameServerPeer(this.nameServerPeer);this.nameServerPeer.connect();return!0}return!1};e.prototype.fillCreateRoomOptions=function(f,b){b=b||{};var d=
{};void 0!==b.isVisible&&(d[a.Constants.GameProperties.IsVisible]=b.isVisible);void 0!==b.isOpen&&(d[a.Constants.GameProperties.IsOpen]=b.isOpen);void 0!==b.maxPlayers&&(d[a.Constants.GameProperties.MaxPlayers]=b.maxPlayers);void 0!==b.propsListedInLobby&&(d[a.Constants.GameProperties.PropsListedInLobby]=b.propsListedInLobby);if(void 0!==b.customGameProperties)for(var e in b.customGameProperties)d[e]=b.customGameProperties[e];f.push(a.Constants.ParameterCode.GameProperties,d);f.push(a.Constants.ParameterCode.CleanupCacheOnLeave,
!0);f.push(a.Constants.ParameterCode.Broadcast,!0);void 0!==b.emptyRoomLiveTime&&f.push(a.Constants.ParameterCode.EmptyRoomTTL,b.emptyRoomLiveTime);void 0!==b.suspendedPlayerLiveTime&&f.push(a.Constants.ParameterCode.PlayerTTL,b.suspendedPlayerLiveTime);void 0!==b.uniqueUserId&&f.push(a.Constants.ParameterCode.CheckUserOnJoin,b.uniqueUserId);b.lobbyName&&(f.push(a.Constants.ParameterCode.LobbyName),f.push(b.lobbyName),void 0!=b.lobbyType&&(f.push(a.Constants.ParameterCode.LobbyType),f.push(b.lobbyType)))};
e.prototype.createRoomFromMy=function(a,b){b=b||{};this.currentRoom.name=a?a:"";b.isVisible=this.currentRoom.isVisible;b.isOpen=this.currentRoom.isOpen;b.maxPlayers=this.currentRoom.maxPlayers;b.customGameProperties=this.currentRoom._customProperties;b.propsListedInLobby=this.currentRoom._propsListedInLobby;b.emptyRoomLiveTime=this.currentRoom.emptyRoomLiveTime;b.suspendedPlayerLiveTime=this.currentRoom.suspendedPlayerLiveTime;b.uniqueUserId=this.currentRoom.uniqueUserId;return this.createRoomInternal(this.masterPeer,
b)};e.prototype.createRoom=function(a,b){this.currentRoom=this.roomFactoryInternal(a?a:"");return this.createRoomInternal(this.masterPeer,b)};e.prototype.joinRoom=function(f,b,d){var c=[];b&&(b.createIfNotExists&&(c.push(a.Constants.ParameterCode.JoinMode,e.JoinMode.CreateIfNotExists),this.fillCreateRoomOptions(c,d)),b.joinToken&&(c.push(a.Constants.ParameterCode.ActorNr,parseInt(b.joinToken)),c.push(a.Constants.ParameterCode.JoinMode,e.JoinMode.Rejoin)));this.currentRoom=this.roomFactoryInternal(f);
c.push(a.Constants.ParameterCode.RoomName,f);this.joinRoomOptions=b||{};this.createRoomOptions=d||{};this.logger.info("Join Room",f,b,d,"...");this.masterPeer.sendOperation(a.Constants.OperationCode.JoinGame,c);return!0};e.prototype.joinRandomRoom=function(f){var b=[];if(f){void 0!=f.matchingType&&f.matchingType!=a.Constants.MatchmakingMode.FillRoom&&(b.push(a.Constants.ParameterCode.MatchMakingType),b.push(f.matchingType));var d={},e=!1;if(void 0!=f.expectedCustomRoomProperties)for(var c in f.expectedCustomRoomProperties)d[c]=
f.expectedCustomRoomProperties[c],e=!0;void 0!=f.expectedMaxPlayers&&0<f.expectedMaxPlayers&&(d[a.Constants.GameProperties.MaxPlayers]=f.expectedMaxPlayers,e=!0);e&&(b.push(a.Constants.ParameterCode.GameProperties),b.push(d));f.lobbyName&&(b.push(a.Constants.ParameterCode.LobbyName),b.push(f.lobbyName),void 0!=f.lobbyType&&(b.push(a.Constants.ParameterCode.LobbyType),b.push(f.lobbyType)));f.sqlLobbyFilter&&(b.push(a.Constants.ParameterCode.Data),b.push(f.sqlLobbyFilter))}this.logger.info("Join Random Room",
f&&f.lobbyName,f&&f.lobbyType,"...");this.masterPeer.sendOperation(a.Constants.OperationCode.JoinRandomGame,b);return!0};e.prototype._setPropertiesOfRoom=function(f,b){var d=[];d.push(a.Constants.ParameterCode.Properties);d.push(f);d.push(a.Constants.ParameterCode.Broadcast);d.push(!0);b&&(d.push(a.Constants.ParameterCode.Forward),d.push(!0));this.gamePeer.sendOperation(a.Constants.OperationCode.SetProperties,d)};e.prototype._setPropertiesOfActor=function(f,b){var d=[];d.push(a.Constants.ParameterCode.ActorNr);
d.push(f);d.push(a.Constants.ParameterCode.Properties);d.push(b);d.push(a.Constants.ParameterCode.Broadcast);d.push(!0);this.gamePeer.sendOperation(a.Constants.OperationCode.SetProperties,d)};e.prototype.disconnect=function(){this.nameServerPeer&&this.nameServerPeer.disconnect();this._cleanupNameServerPeerData();this.masterPeer&&this.masterPeer.disconnect();this._cleanupMasterPeerData();this.gamePeer&&this.gamePeer.disconnect();this._cleanupGamePeerData();this.changeState(e.State.Disconnected)};e.prototype.suspendRoom=
function(){this.isJoinedToRoom()&&(this.gamePeer&&this.gamePeer.disconnect(),this._cleanupGamePeerData(),this.isConnectedToMaster()?this.changeState(e.State.JoinedLobby):(this.changeState(e.State.Disconnected),this.connect(this.connectOptions)))};e.prototype.leaveRoom=function(){this.isJoinedToRoom()&&(this.gamePeer&&this.gamePeer.sendOperation(a.Constants.OperationCode.Leave),this._cleanupGamePeerData(),this.isConnectedToMaster()?this.changeState(e.State.JoinedLobby):(this.changeState(e.State.Disconnected),
this.connect(this.connectOptions)))};e.prototype.raiseEvent=function(a,b,d){this.isJoinedToRoom()&&this.gamePeer.raiseEvent(a,b,d)};e.prototype.changeGroups=function(a,b){this.isJoinedToRoom()&&(this.logger.debug("Group change:",a,b),this.gamePeer.changeGroups(a,b))};e.prototype.findFriends=function(a){if(this.isConnectedToMaster())if(a&&"object"==typeof a){this.findFriendsRequestList=[];for(var b=0;b<a.length;++b)if("string"==typeof a[b])this.findFriendsRequestList[b]=a[b];else{this.logger.error("FindFriends request error:",
"Friend name is not a string",b);this.onFindFriendsResult(1101,"Friend name is not a string "+b,{});return}this.logger.debug("Find friends:",a);this.masterPeer.findFriends(this.findFriendsRequestList)}else this.logger.error("FindFriends request error:","Parameter is not an array"),this.onFindFriendsResult(1101,"Parameter is not an array",{});else this.logger.error("FindFriends request error:","Not connected to Master"),this.onFindFriendsResult(1001,"Not connected to Master",{})};e.prototype.requestLobbyStats=
function(f){if(this.isConnectedToMaster()){this.lobbyStatsRequestList=[];if(f)if("object"==typeof f)for(var b=0;b<f.length;++b){var d=f[b];if("object"==typeof d){var e=d[0];if(e){if(void 0===d[1])d=a.Constants.LobbyType.Default;else if("number"==typeof d[1])d=d[1];else{this.requestLobbyStatsErr("Lobby type is invalid",b);return}this.lobbyStatsRequestList[b]=[e.toString(),d]}else{this.requestLobbyStatsErr("Lobby name is empty",b);return}}else{this.requestLobbyStatsErr("Lobby id is not an array",b);
return}}else{this.requestLobbyStatsErr("Parameter is not an array");return}this.masterPeer.requestLobbyStats(this.lobbyStatsRequestList)}else this.logger.error("LobbyState request error:","Not connected to Master"),this.onLobbyStats(1001,"Not connected to Master",[])};e.prototype.requestLobbyStatsErr=function(a,b){"undefined"===typeof b&&(b="");this.logger.error("LobbyState request error:",a,b);this.onLobbyStats(1101,a+" "+b,[])};e.prototype.getRegions=function(){this.isConnectedToNameServer()?(this.logger.debug("GetRegions..."),
this.nameServerPeer.getRegions(this.appId)):(this.logger.error("GetRegions request error:","Not connected to NameServer"),this.onGetRegionsResult(3001,"Not connected to NameServer",{}))};e.prototype.webRpc=function(a,b){this.isConnectedToMaster()?(this.logger.debug("WebRpc..."),this.masterPeer.webRpc(a,b)):(this.logger.error("WebRpc request error:","Not connected to Master server"),this.onWebRpcResult(1001,"Not connected to Master server",a,0,{}))};e.prototype.connectToRegionMaster=function(a){if(this.isConnectedToNameServer())return this.logger.debug("Connecting to Region Master",
a,"..."),this.nameServerPeer.opAuth(this.appId,this.appVersion,this.userAuthType,this.userAuthParameters,this.userAuthData,this.userId,a),!0;if(this.connectToNameServer({region:a}))return!0;this.logger.error("Connecting to Region Master error:","Not connected to NameServer");return!1};e.prototype.isConnectedToMaster=function(){return this.masterPeer&&this.masterPeer.isConnected()};e.prototype.isConnectedToNameServer=function(){return this.nameServerPeer&&this.nameServerPeer.isConnected()};e.prototype.isInLobby=
function(){return this.state==e.State.JoinedLobby};e.prototype.isJoinedToRoom=function(){return this.state==e.State.Joined};e.prototype.isConnectedToGame=function(){return this.isJoinedToRoom()};e.prototype.availableRooms=function(){return this.roomInfos};e.prototype.setLogLevel=function(a){this.logger.setLevel(a);this.nameServerPeer&&this.nameServerPeer.setLogLevel(a);this.masterPeer&&this.masterPeer.setLogLevel(a);this.gamePeer&&this.gamePeer.setLogLevel(a)};e.prototype.addRoom=function(a){this.roomInfos.push(a);
this.roomInfosDict[a.name]=a};e.prototype.clearRooms=function(){this.roomInfos=[];this.roomInfosDict={}};e.prototype.purgeRemovedRooms=function(){this.roomInfos=this.roomInfos.filter(function(a){return!a.removed});for(var a in this.roomInfosDict)this.roomInfosDict[a].removed&&delete this.roomInfosDict[a]};e.prototype.addActor=function(a){this.actors[a.actorNr]=a;this.actorsArray.push(a);this.currentRoom.playerCount=this.actorsArray.length};e.prototype.removeActor=function(a){delete this.actors[a];
this.actorsArray=this.actorsArray.filter(function(b){return b.actorNr!=a});this.currentRoom.playerCount=this.actorsArray.length};e.prototype.clearActors=function(){this.actors={};this.actorsArray=[];this.currentRoom.playerCount=0};e.prototype.changeState=function(a){this.logger.info("State:",e.StateToName(this.state),"->",e.StateToName(a));this.state=a;this.onStateChange(a)};e.prototype.createRoomInternal=function(f,b){var d=[];this.currentRoom.name&&d.push(a.Constants.ParameterCode.RoomName,this.currentRoom.name);
this.fillCreateRoomOptions(d,b);f===this.masterPeer&&(this.createRoomOptions=b);f===this.gamePeer&&(d.push(a.Constants.ParameterCode.PlayerProperties),d.push(this._myActor._getAllProperties()));(f==this.gamePeer?this.gamePeer._logger:this.masterPeer._logger).info("Create Room",b&&b.lobbyName,b&&b.lobbyType,"...");f.sendOperation(a.Constants.OperationCode.CreateGame,d)};e.prototype.initNameServerPeer=function(f){var b=this;f.setLogLevel(this.logger.getLevel());f.addPeerStatusListener(h.PhotonPeer.StatusCodes.error,
function(){b.changeState(e.State.Error);b.onError(e.PeerErrorCode.NameServerError,"NameServer peer error")});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.connectFailed,function(){b.changeState(e.State.Error);b.onError(e.PeerErrorCode.NameServerConnectFailed,"NameServer peer connect failed. "+b.nameServerAddress)});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.timeout,function(){b.changeState(e.State.Error);b.onError(e.PeerErrorCode.NameServerTimeout,"NameServer peer timeout")});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.connecting,
function(){});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.connect,function(){f._logger.info("Connected");b.changeState(e.State.ConnectedToNameServer);void 0!=b.connectOptions.region&&f.opAuth(b.appId,b.appVersion,b.userAuthType,b.userAuthParameters,b.userAuthData,b.userId,b.connectOptions.region)});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.disconnect,function(){f==b.nameServerPeer&&(b._cleanupNameServerPeerData(),f._logger.info("Disconnected"))});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.connectClosed,
function(){f._logger.info("Server closed connection");b.changeState(e.State.Error);b.onError(e.PeerErrorCode.NameServerConnectClosed,"NameServer server closed connection")});f.addResponseListener(a.Constants.OperationCode.GetRegions,function(d){f._logger.debug("resp GetRegions",d);var e={};if(0==d.errCode){var c=d.vals[a.Constants.ParameterCode.Region],g=d.vals[a.Constants.ParameterCode.Address],k;for(k in c)e[c[k]]=g[k]}else f._logger.error("GetRegions request error.",d.errCode);b.onGetRegionsResult(d.errCode,
d.errMsg,e)});f.addResponseListener(a.Constants.OperationCode.Authenticate,function(d){f._logger.debug("resp Authenticate",d);0==d.errCode?(f._logger.info("Authenticated"),f.disconnect(),b.masterServerAddress=d.vals[a.Constants.ParameterCode.Address],f._logger.info("Connecting to Master server",b.masterServerAddress,"..."),b.connect({userAuthSecret:d.vals[a.Constants.ParameterCode.Secret]})):(b.changeState(e.State.Error),b.onError(e.PeerErrorCode.NameServerAuthenticationFailed,"NameServer authentication failed"))})};
e.prototype.initMasterPeer=function(f){var b=this;f.setLogLevel(this.logger.getLevel());f.addPeerStatusListener(h.PhotonPeer.StatusCodes.error,function(){b.changeState(e.State.Error);b.onError(e.PeerErrorCode.MasterError,"Master peer error")});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.connectFailed,function(){b.changeState(e.State.Error);b.onError(e.PeerErrorCode.MasterConnectFailed,"Master peer connect failed: "+b.masterServerAddress)});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.timeout,
function(){b.changeState(e.State.Error);b.onError(e.PeerErrorCode.MasterTimeout,"Master peer error timeout")});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.connecting,function(){});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.connect,function(){f._logger.info("Connected");var d=[];b.connectOptions.userAuthSecret?(d.push(a.Constants.ParameterCode.Secret,b.connectOptions.userAuthSecret),f.sendOperation(a.Constants.OperationCode.Authenticate,d),f._logger.info("Authenticate with secret...")):
(d.push(a.Constants.ParameterCode.ApplicationId),d.push(b.appId),d.push(a.Constants.ParameterCode.AppVersion),d.push(b.appVersion),b.userAuthType!=a.Constants.CustomAuthenticationType.None&&(d.push(a.Constants.ParameterCode.ClientAuthenticationType,b.userAuthType),d.push(a.Constants.ParameterCode.ClientAuthenticationParams,b.userAuthParameters),b.userAuthData&&d.push(a.Constants.ParameterCode.ClientAuthenticationData,b.userAuthData)),b.userId&&d.push(a.Constants.ParameterCode.UserId,b.userId),b.connectOptions.lobbyStats&&
d.push(a.Constants.ParameterCode.LobbyStats,!0),f.sendOperation(a.Constants.OperationCode.Authenticate,d),f._logger.info("Authenticate..."))});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.disconnect,function(){f==b.masterPeer&&(b._cleanupMasterPeerData(),f._logger.info("Disconnected"))});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.connectClosed,function(){f._logger.info("Server closed connection");b.changeState(e.State.Error);b.onError(e.PeerErrorCode.MasterConnectClosed,"Master server closed connection")});
f.addEventListener(a.Constants.EventCode.GameList,function(d){d=d.vals[a.Constants.ParameterCode.GameList];b.clearRooms();for(var e in d){var c=new k(e);c._updateFromProps(d[e]);b.addRoom(c)}b.onRoomList(b.roomInfos);f._logger.debug("ev GameList",b.roomInfos,d)});f.addEventListener(a.Constants.EventCode.GameListUpdate,function(d){d=d.vals[a.Constants.ParameterCode.GameList];var e=[],c=[],g=[],l;for(l in d){var h=b.roomInfos.filter(function(a){return a.name==l});if(0<h.length){var p=h[0];p._updateFromProps(d[l]);
p.removed?g.push(p):e.push(p)}else h=new k(l),h._updateFromProps(d[l]),b.addRoom(h),c.push(p)}b.purgeRemovedRooms();b.onRoomListUpdate(b.roomInfos,e,c,g);f._logger.debug("ev GameListUpdate:",b.roomInfos,"u:",e,"a:",c,"r:",g,d)});f.addResponseListener(a.Constants.OperationCode.Authenticate,function(d){f._logger.debug("resp Authenticate",d);d.errCode?(b.changeState(e.State.Error),b.onError(e.PeerErrorCode.MasterAuthenticationFailed,"Master authentication failed")):(f._logger.info("Authenticated"),void 0!=
d.vals[a.Constants.ParameterCode.Secret]&&(b.connectOptions.userAuthSecret=d.vals[a.Constants.ParameterCode.Secret]),b.changeState(e.State.ConnectedToMaster),d=[],b.connectOptions.lobbyName&&(d.push(a.Constants.ParameterCode.LobbyName),d.push(b.connectOptions.lobbyName),void 0!=b.connectOptions.lobbyType&&(d.push(a.Constants.ParameterCode.LobbyType),d.push(b.connectOptions.lobbyType))),b.autoJoinLobby&&(f.sendOperation(a.Constants.OperationCode.JoinLobby,d),f._logger.info("Join Lobby",b.connectOptions.lobbyName,
b.connectOptions.lobbyType,"...")))});f.addResponseListener(a.Constants.OperationCode.JoinLobby,function(d){f._logger.debug("resp JoinLobby",d);d.errCode||(f._logger.info("Joined to Lobby"),b.changeState(e.State.JoinedLobby));b._onOperationResponseInternal2(a.Constants.OperationCode.JoinLobby,d)});f.addResponseListener(a.Constants.OperationCode.CreateGame,function(d){f._logger.debug("resp CreateGame",d);d.errCode||(b.currentRoom._updateFromMasterResponse(d.vals),f._logger.debug("Created/Joined "+
b.currentRoom.name),b.connectToGameServer(a.Constants.OperationCode.CreateGame));b._onOperationResponseInternal2(a.Constants.OperationCode.CreateGame,d)});f.addResponseListener(a.Constants.OperationCode.JoinGame,function(d){f._logger.debug("resp JoinGame",d);d.errCode||(b.currentRoom._updateFromMasterResponse(d.vals),f._logger.debug("Joined "+b.currentRoom.name),b.connectToGameServer(a.Constants.OperationCode.JoinGame));b._onOperationResponseInternal2(a.Constants.OperationCode.JoinGame,d)});f.addResponseListener(a.Constants.OperationCode.JoinRandomGame,
function(d){f._logger.debug("resp JoinRandomGame",d);d.errCode||(b.currentRoom._updateFromMasterResponse(d.vals),f._logger.debug("Joined "+b.currentRoom.name),b.connectToGameServer(a.Constants.OperationCode.JoinRandomGame));b._onOperationResponseInternal2(a.Constants.OperationCode.JoinRandomGame,d)});f.addResponseListener(a.Constants.OperationCode.FindFriends,function(d){f._logger.debug("resp FindFriends",d);var e={};if(d.errCode)f._logger.error("FindFriends request error:",d.errCode);else for(var c=
d.vals[a.Constants.ParameterCode.FindFriendsResponseOnlineList]||{},g=d.vals[a.Constants.ParameterCode.FindFriendsResponseRoomIdList]||{},k=0;k<b.findFriendsRequestList.length;++k){var l=b.findFriendsRequestList[k];l&&(e[l]={online:c[k],roomId:g[k]})}b.onFindFriendsResult(d.errCode,d.errMsg,e)});f.addResponseListener(a.Constants.OperationCode.LobbyStats,function(d){f._logger.debug("resp LobbyStats",d);var e=[];if(d.errCode)f._logger.error("LobbyStats request error:",d.errCode);else{var c=d.vals[a.Constants.ParameterCode.LobbyName],
g=d.vals[a.Constants.ParameterCode.LobbyType]||{},k=d.vals[a.Constants.ParameterCode.PeerCount]||{},l=d.vals[a.Constants.ParameterCode.GameCount]||{};if(c)for(var h=0;h<c.length;++h)e[h]={lobbyName:c[h],lobbyType:g[h],peerCount:k[h],gameCount:l[h]};else for(h=0;h<b.lobbyStatsRequestList.length;++h)c=b.lobbyStatsRequestList[h],e[h]={lobbyName:c[0],lobbyType:c[1],peerCount:k[h],gameCount:l[h]}}b.onLobbyStats(d.errCode,d.errMsg,e)});f.addEventListener(a.Constants.EventCode.LobbyStats,function(d){f._logger.debug("ev LobbyStats",
d);var e=[],c=d.vals[a.Constants.ParameterCode.LobbyName],g=d.vals[a.Constants.ParameterCode.LobbyType]||{},k=d.vals[a.Constants.ParameterCode.PeerCount]||{};d=d.vals[a.Constants.ParameterCode.GameCount]||{};if(c)for(var h=0;h<c.length;++h)e[h]={lobbyName:c[h],lobbyType:g[h],peerCount:k[h],gameCount:d[h]};b.onLobbyStats(0,"",e)});f.addEventListener(a.Constants.EventCode.AppStats,function(d){f._logger.debug("ev AppStats",d);b.onAppStats(0,"",{peerCount:d.vals[a.Constants.ParameterCode.PeerCount],masterPeerCount:d.vals[a.Constants.ParameterCode.MasterPeerCount],
gameCount:d.vals[a.Constants.ParameterCode.GameCount]})});f.addResponseListener(a.Constants.OperationCode.Rpc,function(d){f._logger.debug("resp Rpc",d);var e,c,g;0==d.errCode?(e=d.vals[a.Constants.ParameterCode.UriPath],c=d.vals[a.Constants.ParameterCode.RpcCallRetData],g=d.vals[a.Constants.ParameterCode.RpcCallRetCode]):f._logger.error("WebRpc request error:",d.errCode);b.onWebRpcResult(d.errCode,d.errMsg,e,g,c)})};e.prototype.connectToGameServer=function(a){this.connectOptions.keepMasterConnection||
this.masterPeer.disconnect();return this.checkNextState(e.State.ConnectingToGameserver,!0)?(this.logger.info("Connecting to Game",this.currentRoom.address),this.gamePeer=new q(this,m(this.currentRoom.address,this.connectionProtocol),""),this.initGamePeer(this.gamePeer,a),this.gamePeer.connect(),this.changeState(e.State.ConnectingToGameserver),!0):!1};e.prototype.initGamePeer=function(f,b){var d=this;f.setLogLevel(this.logger.getLevel());f.addPeerStatusListener(h.PhotonPeer.StatusCodes.error,function(){d.changeState(e.State.Error);
d.onError(e.PeerErrorCode.GameError,"Game peer error")});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.connectFailed,function(){d.changeState(e.State.Error);d.onError(e.PeerErrorCode.GameConnectFailed,"Game peer connect failed: "+d.currentRoom.address)});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.timeout,function(){d.changeState(e.State.Error);d.onError(e.PeerErrorCode.GameTimeout,"Game peer timeout")});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.connect,function(){f._logger.info("Connected");
var b=[];b.push(a.Constants.ParameterCode.ApplicationId);b.push(d.appId);b.push(a.Constants.ParameterCode.AppVersion);b.push(d.appVersion);void 0!=d.connectOptions.userAuthSecret&&(b.push(a.Constants.ParameterCode.Secret),b.push(d.connectOptions.userAuthSecret));d.userAuthType!=a.Constants.CustomAuthenticationType.None&&(b.push(a.Constants.ParameterCode.ClientAuthenticationType),b.push(d.userAuthType));d.userId&&b.push(a.Constants.ParameterCode.UserId,d.userId);f.sendOperation(a.Constants.OperationCode.Authenticate,
b);f._logger.info("Authenticate...")});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.disconnect,function(){f==d.gamePeer&&(d._cleanupGamePeerData(),f._logger.info("Disconnected"))});f.addPeerStatusListener(h.PhotonPeer.StatusCodes.connectClosed,function(){f._logger.info("Server closed connection");d.changeState(e.State.Error);d.onError(e.PeerErrorCode.MasterConnectClosed,"Game server closed connection")});f.addResponseListener(a.Constants.OperationCode.Authenticate,function(c){f._logger.debug("resp Authenticate",
c);c.errCode?(d.changeState(e.State.Error),d.onError(e.PeerErrorCode.GameAuthenticationFailed,"Game authentication failed")):(f._logger.info("Authenticated"),f._logger.info("Connected"),b==a.Constants.OperationCode.CreateGame?d.createRoomInternal(f,d.createRoomOptions):(c=[],c.push(a.Constants.ParameterCode.RoomName),c.push(d.currentRoom.name),c.push(a.Constants.ParameterCode.Broadcast),c.push(!0),c.push(a.Constants.ParameterCode.PlayerProperties),c.push(d._myActor._getAllProperties()),b==a.Constants.OperationCode.JoinGame&&
(d.joinRoomOptions.createIfNotExists&&(c.push(a.Constants.ParameterCode.JoinMode,e.JoinMode.CreateIfNotExists),d.fillCreateRoomOptions(c,d.createRoomOptions)),d.joinRoomOptions.joinToken&&(c.push(a.Constants.ParameterCode.ActorNr,parseInt(d.joinRoomOptions.joinToken)),c.push(a.Constants.ParameterCode.JoinMode,e.JoinMode.Rejoin))),f.sendOperation(a.Constants.OperationCode.JoinGame,c)),d.changeState(e.State.ConnectedToGameserver))});f.addResponseListener(a.Constants.OperationCode.CreateGame,function(b){f._logger.debug("resp CreateGame",
b);b.errCode||(d._myActor._updateMyActorFromResponse(b.vals),f._logger.info("myActor: ",d._myActor),d.currentRoom._updateFromProps(b.vals[a.Constants.ParameterCode.GameProperties]),d.clearActors(),d.addActor(d._myActor),d.changeState(e.State.Joined),d.onJoinRoom(!0));d._onOperationResponseInternal2(a.Constants.OperationCode.CreateGame,b)});f.addResponseListener(a.Constants.OperationCode.JoinGame,function(b){f._logger.debug("resp JoinGame",b);if(!b.errCode){d._myActor._updateMyActorFromResponse(b.vals);
f._logger.info("myActor: ",d._myActor);d.clearActors();d.addActor(d._myActor);var c=b.vals[a.Constants.ParameterCode.ActorList],g=b.vals[a.Constants.ParameterCode.PlayerProperties];if(void 0!==c)for(var k in c){var h=c[k],l;void 0!==g&&(l=g[h]);var p;void 0!==l&&(p=l[a.Constants.ActorProperties.PlayerName]);h==d._myActor.actorNr?h=d._myActor:(h=d.actorFactoryInternal(p,h),d.addActor(h));void 0!==l&&h._updateCustomProperties(l)}d.currentRoom._updateFromProps(b.vals[a.Constants.ParameterCode.GameProperties]);
d.changeState(e.State.Joined);d.onJoinRoom(!1)}d._onOperationResponseInternal2(a.Constants.OperationCode.JoinGame,b)});f.addResponseListener(a.Constants.OperationCode.SetProperties,function(b){f._logger.debug("resp SetProperties",b);d._onOperationResponseInternal2(a.Constants.OperationCode.SetProperties,b)});f.addEventListener(a.Constants.EventCode.Join,function(a){f._logger.debug("ev Join",a);if(c._getActorNrFromResponse(a.vals)===d._myActor.actorNr)d._myActor._updateFromResponse(a.vals);else{var b=
d.actorFactoryInternal();b._updateFromResponse(a.vals);d.addActor(b);d.onActorJoin(b)}});f.addEventListener(a.Constants.EventCode.Leave,function(b){f._logger.debug("ev Leave",b);var e=c._getActorNrFromResponse(b.vals);if(e&&d.actors[e]){var g=d.actors[e];b.vals[a.Constants.ParameterCode.IsInactive]?(g._setSuspended(!0),d.onActorSuspend(g)):(d.removeActor(e),d.onActorLeave(g,!1))}});f.addEventListener(a.Constants.EventCode.Disconnect,function(a){f._logger.debug("ev Disconnect",a);(a=c._getActorNrFromResponse(a.vals))&&
d.actors[a]&&(a=d.actors[a],a._setSuspended(!0),d.onActorSuspend(a))});f.addEventListener(a.Constants.EventCode.PropertiesChanged,function(b){f._logger.debug("ev PropertiesChanged",b);var e=b.vals[a.Constants.ParameterCode.TargetActorNr];void 0!==e&&0<e?void 0!==d.actors[e]&&(e=d.actors[e],e._updateCustomProperties(b.vals[a.Constants.ParameterCode.Properties]),d.onActorPropertiesChange(e)):(d.currentRoom._updateFromProps(b.vals,b.vals[a.Constants.ParameterCode.Properties]),d.onMyRoomPropertiesChange())})};
e.prototype._cleanupNameServerPeerData=function(){};e.prototype._cleanupMasterPeerData=function(){};e.prototype._cleanupGamePeerData=function(){for(var a in this.actors)this.onActorLeave(this.actors[a],!0);this.clearActors();this.addActor(this._myActor)};e.prototype._onOperationResponseInternal2=function(a,b){this.onOperationResponse(b.errCode,b.errMsg,a,b.vals)};e.prototype.initValidNextState=function(){this.validNextState[e.State.Error]=[e.State.ConnectingToMasterserver,e.State.ConnectingToNameServer];
this.validNextState[e.State.Uninitialized]=[e.State.ConnectingToMasterserver,e.State.ConnectingToNameServer];this.validNextState[e.State.ConnectedToNameServer]=[e.State.ConnectingToMasterserver];this.validNextState[e.State.Disconnected]=[e.State.ConnectingToMasterserver,e.State.ConnectingToNameServer];this.validNextState[e.State.ConnectedToMaster]=[e.State.JoinedLobby];this.validNextState[e.State.JoinedLobby]=[e.State.ConnectingToGameserver];this.validNextState[e.State.ConnectingToGameserver]=[e.State.ConnectedToGameserver];
this.validNextState[e.State.ConnectedToGameserver]=[e.State.Joined]};e.prototype.checkNextState=function(a,b){"undefined"===typeof b&&(b=!1);var d=this.validNextState[this.state],d=d&&0<=d.indexOf(a);if(!d)if(b)this.logger.error("LoadBalancingPeer checkNextState fail: "+e.StateToName(this.state)+" -> "+e.StateToName(a));else throw Error("LoadBalancingPeer checkNextState fail: "+e.StateToName(this.state)+" -> "+e.StateToName(a));return d};e.StateToName=function(a){return Exitgames.Common.Util.getEnumKeyByValue(e.State,
a)};e.JoinMode={Default:0,CreateIfNotExists:1,Rejoin:2};e.PeerErrorCode={Ok:0,MasterError:1001,MasterConnectFailed:1002,MasterConnectClosed:1003,MasterTimeout:1004,MasterEncryptionEstablishError:1005,MasterAuthenticationFailed:1101,GameError:2001,GameConnectFailed:2002,GameConnectClosed:2003,GameTimeout:2004,GameEncryptionEstablishError:2005,GameAuthenticationFailed:2101,NameServerError:3001,NameServerConnectFailed:3002,NameServerConnectClosed:3003,NameServerTimeout:3004,NameServerEncryptionEstablishError:300,
NameServerAuthenticationFailed:3101};e.State={Error:-1,Uninitialized:0,ConnectingToNameServer:1,ConnectedToNameServer:2,ConnectingToMasterserver:3,ConnectedToMaster:4,JoinedLobby:5,ConnectingToGameserver:6,ConnectedToGameserver:7,Joined:8,Disconnected:10};return e}();a.LoadBalancingClient=l;var r=function(e){function f(a,d,f){e.call(this,d,f,"NameServer");this.client=a}__extends(f,e);f.prototype.onUnhandledEvent=function(b,d){this.client.onEvent(b,d.vals[a.Constants.ParameterCode.CustomEventContent],
d.vals[a.Constants.ParameterCode.ActorNr])};f.prototype.onUnhandledResponse=function(a,d){this.client.onOperationResponse(d.errCode,d.errMsg,a,d.vals)};f.prototype.getRegions=function(b){var d=[];d.push(a.Constants.ParameterCode.ApplicationId,b);this.sendOperation(a.Constants.OperationCode.GetRegions,d,!0,0)};f.prototype.opAuth=function(b,d,e,f,c,g,k){var h=[];h.push(a.Constants.ParameterCode.ApplicationId,b);h.push(a.Constants.ParameterCode.AppVersion,d);e!=a.Constants.CustomAuthenticationType.None&&
(h.push(a.Constants.ParameterCode.ClientAuthenticationType,e),h.push(a.Constants.ParameterCode.ClientAuthenticationParams,f),c&&h.push(a.Constants.ParameterCode.ClientAuthenticationData,c));g&&h.push(a.Constants.ParameterCode.UserId,g);h.push(a.Constants.ParameterCode.Region,k);this.sendOperation(a.Constants.OperationCode.Authenticate,h,!0,0);this._logger.info("Authenticate...")};return f}(h.PhotonPeer);a.NameServerPeer=r;var p=function(e){function f(a,d,f){e.call(this,d,f,"Master");this.client=a}
__extends(f,e);f.prototype.onUnhandledEvent=function(b,d){this.client.onEvent(b,d.vals[a.Constants.ParameterCode.CustomEventContent],d.vals[a.Constants.ParameterCode.ActorNr])};f.prototype.onUnhandledResponse=function(a,d){this.client.onOperationResponse(d.errCode,d.errMsg,a,d.vals)};f.prototype.findFriends=function(b){var d=[];d.push(a.Constants.ParameterCode.FindFriendsRequestList);d.push(b);this.sendOperation(a.Constants.OperationCode.FindFriends,d)};f.prototype.requestLobbyStats=function(b){var d=
[];if(b&&0<b.length){for(var e=[],f=[],c=0;c<b.length;++c)e[c]=b[c][0],f[c]=b[c][1];d.push(a.Constants.ParameterCode.LobbyName);d.push(e);d.push(a.Constants.ParameterCode.LobbyType);d.push(f)}this.sendOperation(a.Constants.OperationCode.LobbyStats,d)};f.prototype.webRpc=function(b,d){var e=[];e.push(a.Constants.ParameterCode.UriPath,b);e.push(a.Constants.ParameterCode.RpcCallParams,d);this.sendOperation(a.Constants.OperationCode.Rpc,e)};return f}(h.PhotonPeer);a.MasterPeer=p;var q=function(e){function f(a,
d,f){e.call(this,d,f,"Game");this.client=a}__extends(f,e);f.prototype.onUnhandledEvent=function(b,d){this.client.onEvent(b,d.vals[a.Constants.ParameterCode.CustomEventContent],d.vals[a.Constants.ParameterCode.ActorNr])};f.prototype.onUnhandledResponse=function(a,d){this.client.onOperationResponse(d.errCode,d.errMsg,a,d.vals)};f.prototype.raiseEvent=function(b,d,e){if(this.client.isJoinedToRoom()){this._logger.debug("raiseEvent",b,d,e);b=[a.Constants.ParameterCode.Code,b,a.Constants.ParameterCode.Data,
d];if(e){void 0!=e.receivers&&e.receivers!==a.Constants.ReceiverGroup.Others&&(b.push(a.Constants.ParameterCode.ReceiverGroup),b.push(e.receivers));void 0!=e.cache&&e.cache!==a.Constants.EventCaching.DoNotCache&&(b.push(a.Constants.ParameterCode.Cache),b.push(e.cache));if(void 0!=e.interestGroup)if(this.checkGroupNumber(e.interestGroup))b.push(a.Constants.ParameterCode.Group),b.push(e.interestGroup);else throw Error("raiseEvent - Group not a number: "+e.interestGroup);void 0!=e.targetActors&&(b.push(a.Constants.ParameterCode.ActorList),
b.push(e.targetActors));e.webForward&&(b.push(a.Constants.ParameterCode.Forward),b.push(!0))}this.sendOperation(a.Constants.OperationCode.RaiseEvent,b)}else throw Error("raiseEvent - Not joined!");};f.prototype.changeGroups=function(b,d){var e=[];null!=b&&void 0!=b&&(this.checkGroupArray(b,"groupsToRemove"),e.push(a.Constants.ParameterCode.Remove),e.push(b));null!=d&&void 0!=d&&(this.checkGroupArray(d,"groupsToAdd"),e.push(a.Constants.ParameterCode.Add),e.push(d));this.sendOperation(a.Constants.OperationCode.ChangeGroups,
e)};f.prototype.checkGroupNumber=function(a){return!("number"!=typeof a||isNaN(a)||Infinity===a||-Infinity===a)};f.prototype.checkGroupArray=function(a,d){if(Exitgames.Common.Util.isArray(a))for(var e=0;e<a.length;++e){var f=a[e];if(!this.checkGroupNumber(f))throw Error("changeGroups - "+d+" ("+a+") not an array of numbers: element "+e+" = "+f);}else throw Error("changeGroups - groupsToRemove not an array: "+a);};return f}(h.PhotonPeer);a.GamePeer=q})(h.LoadBalancing||(h.LoadBalancing={}))})(Photon||
(Photon={}));
(function(h){(function(a){(function(a){a.ParameterCode={Channels:0,Channel:1,Messages:2,Message:3,Senders:4,Sender:5,ChannelUserCount:6,UserId:225,MsgId:8,MsgIds:9,SubscribeResults:15,Status:10,Friends:11,SkipMessage:12,HistoryLength:14};a.OperationCode={Subscribe:0,Unsubscribe:1,Publish:2,SendPrivate:3,ChannelHistory:4,UpdateStatus:5,AddFriendds:6,RemoveFriends:7};a.EventCode={ChatMessages:0,Users:1,PrivateMessage:2,FriendsList:3,StatusUpdate:4,Subscribe:5,Unsubscribe:6};a.UserStatus={Offline:0,
Invisible:1,Online:2,Away:3,Dnd:4,Lfg:5,Playing:6};a.UserStatusToName=function(h){return Exitgames.Common.Util.getEnumKeyByValue(a.UserStatus,h)}})(a.Constants||(a.Constants={}))})(h.Chat||(h.Chat={}))})(Photon||(Photon={}));
(function(h){(function(a){var m=function(){function a(c,k){this.sender=c;this.content=k}a.prototype.getSender=function(){return this.sender};a.prototype.getContent=function(){return this.content};return a}();a.Message=m;var n=function(){function a(c,k){this.name=c;this.isPrivat=k;this.messages=[]}a.prototype.getName=function(){return this.name};a.prototype.isPrivate=function(){return this.isPrivat};a.prototype.getMessages=function(){return this.messages};a.prototype.clearMessages=function(){this.messages.splice(0)};
a.prototype.addMessage=function(a){this.messages.push(a)};a.prototype.addMessages=function(a,c){var k=[],h;for(h in a)if(h<c.length){var q=new m(a[h],c[h]);this.addMessage(q);k.push(q)}return k};return a}();a.Channel=n;var c=function(c){function g(a,g,h){c.call(this,a,g,h);this.publicChannels={};this.privateChannels={};this.subscribeRequests=[];this.unsubscribeRequests=[];this.autoJoinLobby=!1}__extends(g,c);g.prototype.onStateChange=function(a){};g.prototype.onError=function(a,c){this.logger.error("Load Balancing Client Error",
a,c)};g.prototype.onSubscribeResult=function(a){};g.prototype.onUnsubscribeResult=function(a){};g.prototype.onChatMessages=function(a,c){};g.prototype.onPrivateMessage=function(a,c){};g.prototype.onUserStatusUpdate=function(a,c,g,h){};g.prototype.connectToRegionFrontEnd=function(a){return this.connectToRegionMaster(a)};g.prototype.isConnectedToFrontEnd=function(){return this.state==g.ChatState.ConnectedToFrontEnd};g.prototype.subscribe=function(c,g){"undefined"===typeof g&&(g=0);if(this.isConnectedToFrontEnd()){this.logger.debug("Subscribe channels:",
c);var h=[];h.push(a.Constants.ParameterCode.Channels,c);void 0!=g&&0!=g&&h.push(a.Constants.ParameterCode.HistoryLength,g);this.masterPeer.sendOperation(a.Constants.OperationCode.Subscribe,h);return!0}this.logger.error("subscribe request error:","Not connected to Front End");return!1};g.prototype.unsubscribe=function(c){if(this.isConnectedToFrontEnd()){this.logger.debug("Unsubscribe channels:",c);var g=[];g.push(a.Constants.ParameterCode.Channels,c);this.masterPeer.sendOperation(a.Constants.OperationCode.Unsubscribe,
g);return!0}this.logger.error("unsubscribe request error:","Not connected to Front End");return!1};g.prototype.publishMessage=function(c,g){if(this.isConnectedToFrontEnd()){var h=[];h.push(a.Constants.ParameterCode.Channel,c);h.push(a.Constants.ParameterCode.Message,g);this.masterPeer.sendOperation(a.Constants.OperationCode.Publish,h);return!0}this.logger.error("publishMessage request error:","Not connected to Front End");return!1};g.prototype.sendPrivateMessage=function(c,g){if(this.isConnectedToFrontEnd()){var h=
[];h.push(a.Constants.ParameterCode.UserId,c);h.push(a.Constants.ParameterCode.Message,g);this.masterPeer.sendOperation(a.Constants.OperationCode.SendPrivate,h);return!0}this.logger.error("sendPrivateMessage request error:","Not connected to Front End");return!1};g.prototype.setUserStatus=function(c,g,h){"undefined"===typeof g&&(g=null);"undefined"===typeof h&&(h=!1);if(this.isConnectedToFrontEnd()){var k=[];k.push(a.Constants.ParameterCode.Status,c);h?k.push(a.Constants.ParameterCode.SkipMessage,
!0):k.push(a.Constants.ParameterCode.Message,g);this.masterPeer.sendOperation(a.Constants.OperationCode.UpdateStatus,k);return!0}this.logger.error("setUserStatus request error:","Not connected to Front End");return!1};g.prototype.addFriends=function(c){if(this.isConnectedToFrontEnd()){var g=[];g.push(a.Constants.ParameterCode.Friends,c);this.masterPeer.sendOperation(a.Constants.OperationCode.AddFriendds,g);return!0}this.logger.error("addFriends request error:","Not connected to Front End");return!1};
g.prototype.removeFriends=function(c){if(this.isConnectedToFrontEnd()){var g=[];g.push(a.Constants.ParameterCode.Friends,c);this.masterPeer.sendOperation(a.Constants.OperationCode.RemoveFriends,g);return!0}this.logger.error("removeFriends request error:","Not connected to Front End");return!1};g.prototype.getPublicChannels=function(){return this.publicChannels};g.prototype.getPrivateChannels=function(){return this.privateChannels};g.prototype.getOrAddChannel=function(a,c,g){void 0==a[c]&&(a[c]=new n(c,
g));return a[c]};g.prototype.initMasterPeer=function(g){var h=this;c.prototype.initMasterPeer.call(this,g);g.addEventListener(a.Constants.EventCode.ChatMessages,function(c){var k=c.vals[a.Constants.ParameterCode.Senders],e=c.vals[a.Constants.ParameterCode.Messages];c=c.vals[a.Constants.ParameterCode.Channel];var f=h.publicChannels[c];f?(k=f.addMessages(k,e),h.onChatMessages(c,k)):g._logger.warn("ev ChatMessages: Got message from unsubscribed channel ",c)});g.addEventListener(a.Constants.EventCode.PrivateMessage,
function(c){var g=c.vals[a.Constants.ParameterCode.Sender],e=c.vals[a.Constants.ParameterCode.Message];c=c.vals[a.Constants.ParameterCode.UserId];var f="",f=h.getUserId()==g?c:g;h.getOrAddChannel(h.privateChannels,f,!0);h.onPrivateMessage(f,new m(g,e))});g.addEventListener(a.Constants.EventCode.StatusUpdate,function(c){var g=c.vals[a.Constants.ParameterCode.Message];h.onUserStatusUpdate(c.vals[a.Constants.ParameterCode.Sender],c.vals[a.Constants.ParameterCode.Status],void 0!==g,g)});g.addEventListener(a.Constants.EventCode.Subscribe,
function(c){g._logger.debug("ev Subscribe",c);var k={},e=c.vals[a.Constants.ParameterCode.Channels]||[];c=c.vals[a.Constants.ParameterCode.SubscribeResults]||[];for(var f in e){var b=e[f];k[b]=!1;f<c.length&&c[f]&&(h.getOrAddChannel(h.publicChannels,b,!1),k[b]=!0)}h.onSubscribeResult(k)});g.addEventListener(a.Constants.EventCode.Unsubscribe,function(c){g._logger.debug("ev Unsubscribe",c);var k={};c=c.vals[a.Constants.ParameterCode.Channels]||[];for(var e in c){var f=c[e];delete h.publicChannels[f];
k[f]=!0}h.onUnsubscribeResult(k)})};g.StateToName=function(a){var c=Exitgames.Common.Util.getEnumKeyByValue(g.ChatState,a);return void 0===c?Exitgames.Common.Util.getEnumKeyByValue(g.State,a):c};g.ChatPeerErrorCode={Ok:0,FrontEndError:1001,FrontEndConnectFailed:1002,FrontEndConnectClosed:1003,FrontEndTimeout:1004,FrontEndEncryptionEstablishError:1005,FrontEndAuthenticationFailed:1101,NameServerError:3001,NameServerConnectFailed:3002,NameServerConnectClosed:3003,NameServerTimeout:3004,NameServerEncryptionEstablishError:300,
NameServerAuthenticationFailed:3101};g.ChatState={Error:-1,Uninitialized:0,ConnectingToNameServer:1,ConnectedToNameServer:2,ConnectingToFrontEnd:3,ConnectedToFrontEnd:4,Disconnected:10};return g}(h.LoadBalancing.LoadBalancingClient);a.ChatClient=c})(h.Chat||(h.Chat={}))})(Photon||(Photon={}));
